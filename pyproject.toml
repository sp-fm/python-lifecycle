[tool.poetry]
name = "python-lifecycle"
version = "0.2.0"
description = ""
authors = ["Shashanka Prajapati <shashanka@fusemachines.com>"]

[tool.poetry.dependencies]
python = "^3.7"
fire = "^0.3.1"
loguru = "^0.5.3"
dynaconf = "^3.1.1"

[tool.poetry.dev-dependencies]
pytest = "*"
flake8 = "^3.8.3"
black = "^20.8b1"
isort = "^5.5.4"
mypy = "^0.782"
pre-commit = "^2.7.1"
coverage = "^5.3"
tox = "^3.20.0"
Sphinx = "^3.2.1"
sphinx-rtd-theme = "^0.5.0"
toml = "^0.10.1"

[tool.poetry.scripts]
calc = "python_lifecycle.calculator.cli:main"

[tool.coverage.run]
branch = true
source = [
    "python_lifecycle",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about fire commands
    "fire.Fire",
]
fail_under = 90
ignore_errors = true

[build-system]
requires = ["poetry-core>=1.0.0a5"]
build-backend = "poetry.core.masonry.api"
